version: '3.8'

services:
  apigateway:
    build: ./totos-apigateway/apigateway/
    container_name: apigateway
    networks:
      - backend-network
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8080:8080"

  authapi:
    build: ./totos-authAPI/auth-api/
    container_name: authapi
    networks:
      - backend-network
    environment:
      - DB_URL=jdbc:mysql://mysql:3306/usersdb
      - DB_USERNAME=root
      - DB_PASSWORD=1258963abc
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8081:8081"

  usersapi:
    build: ./totos-usersAPI/usersAPI/
    container_name: usersapi
    networks:
      - backend-network
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8082:8082"

  productsapi:
    build: ./totos-productsAPI/productsAPI/
    container_name: productsapi
    networks:
      - backend-network
    environment:
      - DB_URL=jdbc:mysql://mysql:3306/productsdb
      - DB_USERNAME=root
      - DB_PASSWORD=1258963abc
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8083:8083"

  mysql:
    image: mysql:8.0
    container_name: mysql
    networks:
      - backend-network
    environment:
      MYSQL_ROOT_PASSWORD: 1258963abc
    command: --init-file /data/application/init.sql
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/data/application/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  backend-network:
    driver: bridge

volumes:
  db_data: